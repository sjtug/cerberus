{"mappings":"A,C,K,S,E,C,E,G,E,E,C,E,C,E,E,E,C,E,G,C,M,A,O,C,M,E,C,I,E,A,C,G,E,K,A,E,K,C,oE,I,E,O,E,E,E,C,C,E,A,C,O,I,I,E,E,G,Q,E,C,I,E,E,W,E,K,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,O,M,C,E,C,G,C,ECA8B,CAAC,MAAQ,wCAAwC,MAAQ,yCAAyC,G,I,E,C,CKAhI,CAAA,aFAA,EAAiB,EAAsB,S,I,E,C,E,E,C,EEEvC,EAAiB,SAAU,CAAS,CAAE,CAAM,CAAE,CAAK,EACjD,GAAI,IAAW,KAAK,QAAQ,CAAC,MAAM,CAGjC,OAAO,EAGP,IAAI,EAAS,EAAQ,UAAY,KAAK,SAAS,CAAC,GAAa,IAAM,iBAAmB,KAAK,SAAS,CAAC,GAAa,KAClH,OAAO,IAAI,eAAe,CAAC,IAAI,KAAK,CAAC,EAAO,CAAE,CAC5C,KAAM,wBACR,GAEJ,EDbA,IAAI,EAAM,IAAI,IAAI,EAAsB,UFEzB,eAAA,EACb,CAAI,CACJ,EAAa,CAAC,CACd,EAAS,IAAI,CACb,EAAmB,IAAI,CACvB,EAAW,UAAU,mBAAmB,EAAI,CAAE,EAE9C,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,QAAQ,KAAK,CAAC,aACd,IAAM,EAAU,EAAE,CACZ,EAAY,KAChB,EAAQ,OAAO,CAAC,AAAC,GAAM,EAAE,SAAS,IACnB,OAAX,IAEF,EAAO,mBAAmB,CAAC,QAAS,GAChC,EAAO,OAAO,GAChB,QAAQ,GAAG,CAAC,eACZ,EAAO,AAAI,MAAM,iBAGvB,CACI,AAAW,QAAX,GACF,EAAO,gBAAgB,CAAC,QAAS,EAAW,CAAE,KAAM,CAAA,CAAK,GAG1D,AAAA,CAAA,c,EACC,IAAM,EAAa,MAAM,AAAC,CAAA,MAAM,M,C,EAAM,I,E,U,C,E,O,C,EAAG,EAAI,WAAW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","sources":["<anon>","../../../.cache/pnpm/dlx/373fe61ee54b74840b448f501779814db6b0718e44a796ab2a4d022566f37dc0/1967eb55cf2-3a31/node_modules/.pnpm/@parcel+runtime-js@2.14.4_@parcel+core@2.14.4_@swc+helpers@0.5.17_/node_modules/@parcel/runtime-js/lib/runtime-d7cf918ab18b570c.js","web/js/main.mjs","web/js/pow.mjs","../../../.cache/pnpm/dlx/373fe61ee54b74840b448f501779814db6b0718e44a796ab2a4d022566f37dc0/1967eb55cf2-3a31/node_modules/.pnpm/@parcel+runtime-js@2.14.4_@parcel+core@2.14.4_@swc+helpers@0.5.17_/node_modules/@parcel/runtime-js/lib/runtime-107fb32c0cd58cda.js","../../../.cache/pnpm/dlx/373fe61ee54b74840b448f501779814db6b0718e44a796ab2a4d022566f37dc0/1967eb55cf2-3a31/node_modules/.pnpm/@parcel+runtime-js@2.14.4_@parcel+core@2.14.4_@swc+helpers@0.5.17_/node_modules/@parcel/runtime-js/lib/runtime-188e5b35ccf43d7a.js","../../../.cache/pnpm/dlx/373fe61ee54b74840b448f501779814db6b0718e44a796ab2a4d022566f37dc0/1967eb55cf2-3a31/node_modules/.pnpm/@parcel+runtime-js@2.14.4_@parcel+core@2.14.4_@swc+helpers@0.5.17_/node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["(() => {\n\nfunction $parcel$extendImportMap(map) {\n  Object.assign(parcelRequire.i ??= {}, map);\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $parcel$bundleURL;\nfunction $parcel$resolve(url) {\n  url = parcelRequire.i?.[url] || url;\n  if (!$parcel$bundleURL) {\n    try {\n      throw new Error();\n    } catch (err) {\n      var matches = ('' + err.stack).match(\n        /(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g,\n      );\n      if (matches) {\n        $parcel$bundleURL = matches[0];\n      } else {\n        return $parcel$distDir + url;\n      }\n    }\n  }\n  return new URL($parcel$distDir + url, $parcel$bundleURL).toString();\n}\n\n      var $parcel$global = globalThis;\n    var $parcel$distDir = \"./\";\n\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nvar $c9b2af92219030d8$exports = {};\n$parcel$extendImportMap({\n    \"jSdBt\": \"pow_bg.52bf611c.wasm\",\n    \"dfn7h\": \"pow.worker.a797297b.js\"\n});\n\n// This file contains code adapted from https://github.com/TecharoHQ/anubis under the MIT License.\n// This file contains code adapted from https://github.com/TecharoHQ/anubis under the MIT License.\nvar $7ef4bc19c4ca38f8$exports = {};\n$7ef4bc19c4ca38f8$exports = $parcel$resolve(\"jSdBt\");\n\n\nvar $8fb2b08829aa6e40$exports = {};\nvar $6607853ecf3f080e$exports = {};\n\"use strict\";\n$6607853ecf3f080e$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: 'application/javascript'\n        }));\n    }\n};\n\n\nlet $8fb2b08829aa6e40$var$url = new URL($parcel$resolve(\"dfn7h\"));\n$8fb2b08829aa6e40$exports = $6607853ecf3f080e$exports($8fb2b08829aa6e40$var$url.toString(), $8fb2b08829aa6e40$var$url.origin, false);\n\n\nasync function $4f91347e99aae743$export$2e2bcd8739ae039(data, difficulty = 5, signal = null, progressCallback = null, threads = navigator.hardwareConcurrency || 1) {\n    return new Promise((resolve, reject)=>{\n        console.debug(\"fast algo\");\n        const workers = [];\n        const terminate = ()=>{\n            workers.forEach((w)=>w.terminate());\n            if (signal !== null) {\n                // clean up listener to avoid memory leak\n                signal.removeEventListener(\"abort\", terminate);\n                if (signal.aborted) {\n                    console.log(\"PoW aborted\");\n                    reject(new Error(\"PoW aborted\"));\n                }\n            }\n        };\n        if (signal !== null) signal.addEventListener(\"abort\", terminate, {\n            once: true\n        });\n        (async ()=>{\n            const wasmModule = await (await fetch((0, (/*@__PURE__*/$parcel$interopDefault($7ef4bc19c4ca38f8$exports))))).arrayBuffer();\n            for(let i = 0; i < threads; i++){\n                let worker = new Worker($8fb2b08829aa6e40$exports);\n                worker.onmessage = (event)=>{\n                    if (typeof event.data === \"number\") progressCallback?.(event.data);\n                    else {\n                        terminate();\n                        resolve(event.data);\n                    }\n                };\n                worker.onerror = (event)=>{\n                    terminate();\n                    reject(event);\n                };\n                worker.postMessage({\n                    wasmModule: wasmModule,\n                    data: data,\n                    difficulty: difficulty,\n                    nonce: i,\n                    threads: threads\n                });\n                workers.push(worker);\n            }\n        })();\n    });\n}\n\n\nclass $7db32f7c3d5f884f$var$VerificationUI {\n    static state = {\n        baseURL: '',\n        version: 'unknown'\n    };\n    static elements = {\n        title: null,\n        mascot: null,\n        status: null,\n        metrics: null,\n        message: null,\n        progressContainer: null,\n        progressBar: null\n    };\n    static initialize(config) {\n        this.state = {\n            ...this.state,\n            ...config\n        };\n        // Cache DOM elements\n        this.elements = {\n            title: document.getElementById('title'),\n            mascot: document.getElementById('mascot'),\n            status: document.getElementById('status'),\n            metrics: document.getElementById('metrics'),\n            message: document.getElementById('message'),\n            progressContainer: document.getElementById('progress-container'),\n            progressBar: document.getElementById('progress-bar')\n        };\n    }\n    static setState(state, data = {}) {\n        switch(state){\n            case 'checking':\n                this.setChecking(data);\n                break;\n            case 'success':\n                this.setSuccess(data);\n                break;\n        }\n    }\n    static setChecking(data) {\n        this.elements.title.textContent = data.title || \"Making sure you're not a bot!\";\n        this.elements.mascot.src = `${this.state.baseURL}/static/img/mascot-puzzle.png?v=${this.state.version}`;\n        this.elements.status.textContent = data.status || 'Calculating...';\n        this.elements.progressContainer.classList.remove('hidden');\n        this.setCheckingProgress(data.progress, data.metrics, data.message);\n    }\n    static setCheckingProgress(percent, metrics, message) {\n        if (percent !== undefined) this.elements.progressBar.style.width = `${percent}%`;\n        if (metrics !== undefined) {\n            if (metrics === \"\") this.elements.metrics.classList.add('hidden');\n            else {\n                this.elements.metrics.classList.remove('hidden');\n                this.elements.metrics.textContent = metrics;\n            }\n        }\n        if (message !== undefined) this.elements.message.textContent = message;\n    }\n    static setSuccess(data) {\n        this.elements.title.textContent = 'Success!';\n        this.elements.mascot.src = `${this.state.baseURL}/static/img/mascot-pass.png?v=${this.state.version}`;\n        this.elements.status.textContent = data.status || 'Done!';\n        this.elements.metrics.textContent = data.metrics || 'Took ?, ? iterations';\n        this.elements.message.textContent = data.message || '';\n        this.elements.progressContainer.classList.add('hidden');\n    }\n}\nfunction $7db32f7c3d5f884f$var$createAnswerForm(hash, solution, baseURL, nonce, ts, signature) {\n    const form = document.createElement('form');\n    form.method = 'POST';\n    form.action = `${baseURL}/answer`;\n    const responseInput = document.createElement('input');\n    responseInput.type = 'hidden';\n    responseInput.name = 'response';\n    responseInput.value = hash;\n    const solutionInput = document.createElement('input');\n    solutionInput.type = 'hidden';\n    solutionInput.name = 'solution';\n    solutionInput.value = solution;\n    const nonceInput = document.createElement('input');\n    nonceInput.type = 'hidden';\n    nonceInput.name = 'nonce';\n    nonceInput.value = nonce;\n    const tsInput = document.createElement('input');\n    tsInput.type = 'hidden';\n    tsInput.name = 'ts';\n    tsInput.value = ts;\n    const signatureInput = document.createElement('input');\n    signatureInput.type = 'hidden';\n    signatureInput.name = 'signature';\n    signatureInput.value = signature;\n    const redirInput = document.createElement('input');\n    redirInput.type = 'hidden';\n    redirInput.name = 'redir';\n    redirInput.value = window.location.href;\n    form.appendChild(responseInput);\n    form.appendChild(solutionInput);\n    form.appendChild(nonceInput);\n    form.appendChild(tsInput);\n    form.appendChild(signatureInput);\n    form.appendChild(redirInput);\n    document.body.appendChild(form);\n    return form;\n}\n(async ()=>{\n    // const image = document.getElementById('image');\n    // const spinner = document.getElementById('spinner');\n    // const anubisVersion = JSON.parse(document.getElementById('anubis_version').textContent);\n    const challenge = JSON.parse(document.getElementById('challenge').textContent);\n    const difficulty = JSON.parse(document.getElementById('difficulty').textContent);\n    const baseURL = JSON.parse(document.getElementById('baseURL').textContent);\n    const version = JSON.parse(document.getElementById('version').textContent);\n    const inputNonce = JSON.parse(document.getElementById('nonce').textContent);\n    const ts = JSON.parse(document.getElementById('ts').textContent);\n    const signature = JSON.parse(document.getElementById('signature').textContent);\n    // Initialize VerificationUI with configuration\n    $7db32f7c3d5f884f$var$VerificationUI.initialize({\n        baseURL: baseURL,\n        version: version\n    });\n    // Set initial checking state\n    $7db32f7c3d5f884f$var$VerificationUI.setState('checking', {\n        metrics: `Difficulty: ${difficulty}, Speed: calculating...`,\n        message: \"\"\n    });\n    const t0 = Date.now();\n    let lastUpdate = 0;\n    const likelihood = Math.pow(16, -difficulty);\n    const mergedChallenge = `${challenge}|${inputNonce}|${ts}|${signature}|`;\n    const { hash: hash, nonce: solution } = await (0, $4f91347e99aae743$export$2e2bcd8739ae039)(mergedChallenge, difficulty, null, (iters)=>{\n        // the probability of still being on the page is (1 - likelihood) ^ iters.\n        // by definition, half of the time the progress bar only gets to half, so\n        // apply a polynomial ease-out function to move faster in the beginning\n        // and then slow down as things get increasingly unlikely. quadratic felt\n        // the best in testing, but this may need adjustment in the future.\n        const probability = Math.pow(1 - likelihood, iters);\n        const distance = (1 - Math.pow(probability, 2)) * 100;\n        // Update progress every 100ms\n        const now = Date.now();\n        const delta = now - t0;\n        if (delta - lastUpdate > 100) {\n            const speed = iters / delta;\n            $7db32f7c3d5f884f$var$VerificationUI.setCheckingProgress(distance, `Difficulty: ${difficulty}, Speed: ${speed.toFixed(3)}kH/s`, probability < 0.01 ? 'This is taking longer than expected. Please do not refresh the page.' : undefined);\n            lastUpdate = delta;\n        }\n    });\n    const t1 = Date.now();\n    console.log({\n        hash: hash,\n        solution: solution\n    });\n    // Show success state\n    $7db32f7c3d5f884f$var$VerificationUI.setState('success', {\n        status: 'Verification Complete!',\n        metrics: `Took ${t1 - t0}ms, ${solution} iterations`\n    });\n    const form = $7db32f7c3d5f884f$var$createAnswerForm(hash, solution, baseURL, inputNonce, ts, signature);\n    setTimeout(()=>{\n        form.submit();\n    }, 250);\n})();\n\n})();\n//# sourceMappingURL=main.js.map\n","parcelRequire.extendImportMap({\"jSdBt\":\"pow_bg.52bf611c.wasm\",\"dfn7h\":\"pow.worker.a797297b.js\"});","// This file contains code adapted from https://github.com/TecharoHQ/anubis under the MIT License.\n\nimport pow from \"./pow.mjs\";\n\nclass VerificationUI {\n  static state = {\n    baseURL: '',\n    version: 'unknown'\n  };\n\n  static elements = {\n    title: null,\n    mascot: null,\n    status: null,\n    metrics: null,\n    message: null,\n    progressContainer: null,\n    progressBar: null\n  };\n\n  static initialize(config) {\n    this.state = {\n      ...this.state,\n      ...config\n    };\n\n    // Cache DOM elements\n    this.elements = {\n      title: document.getElementById('title'),\n      mascot: document.getElementById('mascot'),\n      status: document.getElementById('status'),\n      metrics: document.getElementById('metrics'),\n      message: document.getElementById('message'),\n      progressContainer: document.getElementById('progress-container'),\n      progressBar: document.getElementById('progress-bar')\n    };\n  }\n\n  static setState(state, data = {}) {\n    switch (state) {\n      case 'checking':\n        this.setChecking(data);\n        break;\n      case 'success':\n        this.setSuccess(data);\n        break;\n    }\n  }\n\n  static setChecking(data) {\n    this.elements.title.textContent = data.title || \"Making sure you're not a bot!\";\n    this.elements.mascot.src = `${this.state.baseURL}/static/img/mascot-puzzle.png?v=${this.state.version}`;\n    this.elements.status.textContent = data.status || 'Calculating...';\n    this.elements.progressContainer.classList.remove('hidden');\n    this.setCheckingProgress(data.progress, data.metrics, data.message);\n  }\n\n  static setCheckingProgress(percent, metrics, message) {\n    if (percent !== undefined) {\n      this.elements.progressBar.style.width = `${percent}%`;\n    }\n    if (metrics !== undefined) {\n      if (metrics === \"\") {\n        this.elements.metrics.classList.add('hidden');\n      } else {\n        this.elements.metrics.classList.remove('hidden');\n        this.elements.metrics.textContent = metrics;\n      }\n    }\n    if (message !== undefined) {\n      this.elements.message.textContent = message;\n    }\n  }\n\n  static setSuccess(data) {\n    this.elements.title.textContent = 'Success!';\n    this.elements.mascot.src = `${this.state.baseURL}/static/img/mascot-pass.png?v=${this.state.version}`;\n    this.elements.status.textContent = data.status || 'Done!';\n    this.elements.metrics.textContent = data.metrics || 'Took ?, ? iterations';\n    this.elements.message.textContent = data.message || '';\n    this.elements.progressContainer.classList.add('hidden');\n  }\n}\n\nfunction createAnswerForm(hash, solution, baseURL, nonce, ts, signature) {\n  const form = document.createElement('form');\n  form.method = 'POST';\n  form.action = `${baseURL}/answer`;\n\n  const responseInput = document.createElement('input');\n  responseInput.type = 'hidden';\n  responseInput.name = 'response';\n  responseInput.value = hash;\n\n  const solutionInput = document.createElement('input');\n  solutionInput.type = 'hidden';\n  solutionInput.name = 'solution';\n  solutionInput.value = solution;\n\n  const nonceInput = document.createElement('input');\n  nonceInput.type = 'hidden';\n  nonceInput.name = 'nonce';\n  nonceInput.value = nonce;\n\n  const tsInput = document.createElement('input');\n  tsInput.type = 'hidden';\n  tsInput.name = 'ts';\n  tsInput.value = ts;\n\n  const signatureInput = document.createElement('input');\n  signatureInput.type = 'hidden';\n  signatureInput.name = 'signature';\n  signatureInput.value = signature;\n\n  const redirInput = document.createElement('input');\n  redirInput.type = 'hidden';\n  redirInput.name = 'redir';\n  redirInput.value = window.location.href;\n\n  form.appendChild(responseInput);\n  form.appendChild(solutionInput);\n  form.appendChild(nonceInput);\n  form.appendChild(tsInput);\n  form.appendChild(signatureInput);\n  form.appendChild(redirInput);\n  document.body.appendChild(form);\n\n  return form;\n}\n\n(async () => {\n  // const image = document.getElementById('image');\n  // const spinner = document.getElementById('spinner');\n  // const anubisVersion = JSON.parse(document.getElementById('anubis_version').textContent);\n\n  const challenge = JSON.parse(document.getElementById('challenge').textContent);\n  const difficulty = JSON.parse(document.getElementById('difficulty').textContent);\n  const baseURL = JSON.parse(document.getElementById('baseURL').textContent);\n  const version = JSON.parse(document.getElementById('version').textContent);\n  const inputNonce = JSON.parse(document.getElementById('nonce').textContent);\n  const ts = JSON.parse(document.getElementById('ts').textContent);\n  const signature = JSON.parse(document.getElementById('signature').textContent);\n\n  // Initialize VerificationUI with configuration\n  VerificationUI.initialize({\n    baseURL,\n    version\n  });\n\n  // Set initial checking state\n  VerificationUI.setState('checking', {\n    metrics: `Difficulty: ${difficulty}, Speed: calculating...`,\n    message: \"\"\n  });\n\n  const t0 = Date.now();\n  let lastUpdate = 0;\n\n  const likelihood = Math.pow(16, -difficulty);\n\n  const mergedChallenge = `${challenge}|${inputNonce}|${ts}|${signature}|`;\n  const { hash, nonce: solution } = await pow(mergedChallenge, difficulty, null, (iters) => {\n    // the probability of still being on the page is (1 - likelihood) ^ iters.\n    // by definition, half of the time the progress bar only gets to half, so\n    // apply a polynomial ease-out function to move faster in the beginning\n    // and then slow down as things get increasingly unlikely. quadratic felt\n    // the best in testing, but this may need adjustment in the future.\n    const probability = Math.pow(1 - likelihood, iters);\n    const distance = (1 - Math.pow(probability, 2)) * 100;\n\n    // Update progress every 100ms\n    const now = Date.now();\n    const delta = now - t0;\n\n    if (delta - lastUpdate > 100) {\n      const speed = iters / delta;\n      VerificationUI.setCheckingProgress(\n        distance,\n        `Difficulty: ${difficulty}, Speed: ${speed.toFixed(3)}kH/s`,\n        probability < 0.01 ? 'This is taking longer than expected. Please do not refresh the page.' : undefined\n      );\n      lastUpdate = delta;\n    };\n  });\n  const t1 = Date.now();\n  console.log({ hash, solution });\n\n  // Show success state\n  VerificationUI.setState('success', {\n    status: 'Verification Complete!',\n    metrics: `Took ${t1 - t0}ms, ${solution} iterations`\n  });\n\n  const form = createAnswerForm(hash, solution, baseURL, inputNonce, ts, signature);\n  setTimeout(() => {\n    form.submit();\n  }, 250);\n\n})();","// This file contains code adapted from https://github.com/TecharoHQ/anubis under the MIT License.\nimport wasm from 'url:../../pow/pkg/pow_bg.wasm';\n\nexport default async function process(\n  data,\n  difficulty = 5,\n  signal = null,\n  progressCallback = null,\n  threads = (navigator.hardwareConcurrency || 1),\n) {\n  return new Promise((resolve, reject) => {\n    console.debug(\"fast algo\");\n    const workers = [];\n    const terminate = () => {\n      workers.forEach((w) => w.terminate());\n      if (signal !== null) {\n        // clean up listener to avoid memory leak\n        signal.removeEventListener(\"abort\", terminate);\n        if (signal.aborted) {\n          console.log(\"PoW aborted\");\n          reject(new Error(\"PoW aborted\"));\n        }\n      }\n    };\n    if (signal !== null) {\n      signal.addEventListener(\"abort\", terminate, { once: true });\n    }\n\n    (async () => {\n      const wasmModule = await (await fetch(wasm)).arrayBuffer();\n\n      for (let i = 0; i < threads; i++) {\n        let worker = new Worker(new URL(\"./pow.worker.js\", import.meta.url), { type: \"module\" });\n\n        worker.onmessage = (event) => {\n          if (typeof event.data === \"number\") {\n            progressCallback?.(event.data);\n          } else {\n            terminate();\n            resolve(event.data);\n          }\n        };\n\n        worker.onerror = (event) => {\n          terminate();\n          reject(event);\n        };\n\n        worker.postMessage({\n          wasmModule,\n          data,\n          difficulty,\n          nonce: i,\n          threads,\n        });\n\n        workers.push(worker);\n      }\n    })();\n  });\n}","module.exports = parcelRequire.resolve(\"jSdBt\");","let workerURL = require('./helpers/get-worker-url');\nlet url = new URL(parcelRequire.resolve(\"dfn7h\"));\nmodule.exports = workerURL(url.toString(), url.origin, false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$parcel$resolve","url","parcelRequire","i","$parcel$bundleURL","Error","err","matches","stack","match","$parcel$distDir","URL","toString","$parcel$global","globalThis","$parcel$modules","$parcel$inits","id","exports","init","module","call","code","register","Object","assign","$7ef4bc19c4ca38f8$exports","$8fb2b08829aa6e40$exports","$6607853ecf3f080e$exports","workerUrl","origin","isESM","self","location","source","JSON","stringify","createObjectURL","Blob","type","$8fb2b08829aa6e40$var$url","$4f91347e99aae743$export$2e2bcd8739ae039","data","difficulty","signal","progressCallback","threads","navigator","hardwareConcurrency","Promise","resolve","reject","console","debug","workers","terminate","forEach","w","removeEventListener","aborted","log","addEventListener","once","a","wasmModule","fetch","__esModule","default","arrayBuffer","worker","Worker","onmessage","event","onerror","postMessage","nonce","push","$7db32f7c3d5f884f$var$VerificationUI","state","baseURL","version","elements","title","mascot","status","metrics","message","progressContainer","progressBar","initialize","config","document","getElementById","setState","setChecking","setSuccess","textContent","src","classList","remove","setCheckingProgress","progress","percent","undefined","style","width","add","challenge","parse","inputNonce","ts","signature","t0","Date","now","lastUpdate","likelihood","Math","pow","mergedChallenge","hash","solution","iters","probability","distance","delta","speed","toFixed","t1","form","$7db32f7c3d5f884f$var$createAnswerForm","createElement","method","action","responseInput","name","value","solutionInput","nonceInput","tsInput","signatureInput","redirInput","window","href","appendChild","body","setTimeout","submit"],"version":3,"file":"main.js.map"}